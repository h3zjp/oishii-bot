const goodText = '„Åä„ÅÑ„Åó„ÅÑ';
const badText = '„Åæ„Åö„ÅÑ';

export const arrToStr = (arr: string[]): string => arr[Math.floor(Math.random() * arr.length)];

export default {
    commands: {
        denied: '„Åì„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅØ„ÄÅ„Ç™„Éº„Éä„Éº„ÅÆ„ÅøÂÆüË°å„Åß„Åç„Åæ„Åô„ÄÇ',
        help: [
            '/help: „Ç≥„Éû„É≥„Éâ„É™„Çπ„Éà„ÇíË°®Á§∫„Åô„Çã„ÄÇ',
            '/ping: ÁîüÂ≠òÁ¢∫Ë™ç„Åô„Çã„ÄÇ',
            '/info: DB„ÅÆ„É¨„Ç≥„Éº„ÉâÊï∞„ÇÑCommit Hash„ÄÅÁ®ºÂÉçÊôÇÈñì„ÇíË°®Á§∫„Åô„Çã„ÄÇ',
            '/follow: „Éï„Ç©„É≠„Éº„Åô„Çã„ÄÇ',
            '/unfollow: „Éï„Ç©„É≠„Éº„ÇíËß£Èô§„Åô„Çã„ÄÇ',
            '/say: „Å™„Å´„ÅãË®Ä„Çè„Åõ„Çã„ÄÇ(„Ç™„Éº„Éä„Éº„ÅÆ„Åø)',
            '/delete: ÂâäÈô§„Åô„Çã„ÄÇÔºà„Ç™„Éº„Éä„Éº„ÅÆ„ÅøÔºâ',
            // '/chart: DB„ÅÆ„É¨„Ç≥„Éº„ÉâÊï∞„Çí„ÉÅ„É£„Éº„Éà„Å´„Åô„Çã„ÄÇÔºà„Ç™„Éº„Éä„Éº„ÅÆ„ÅøÔºâ',
            '/ng (a|b): NG„ÉØ„Éº„Éâ„ÇíËøΩÂä†/ÂâäÈô§„Åô„Çã„ÄÇÔºà„Ç™„Éº„Éä„Éº„ÅÆ„ÅøÔºâ',
        ],
        ping: '„ÅΩ„ÇìÔºÅ',
        nullpo: '„Ç¨„ÉÉ',
        delete: {
            done: (num: number): string => `${num}‰ª∂ÂâäÈô§„Åó„Åæ„Åó„Åü„ÄÇ`,
            notFound: 'Ë¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ',
        },
        follow: {
            done: '„Éï„Ç©„É≠„Éº„Åó„Åæ„Åó„Åü„ÄÇ',
            already: 'Êó¢„Å´„Éï„Ç©„É≠„Éº„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
            cant: '„Éï„Ç©„É≠„Éº„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ',
        },
        unfollow: {
            done: '„Éï„Ç©„É≠„ÉºËß£Èô§„Åó„Åæ„Åó„Åü„ÄÇ',
            not: '„Éï„Ç©„É≠„Éº„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ',
            cant: '„Éï„Ç©„É≠„ÉºËß£Èô§„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ',
        },
        chart: 'DB„ÅÆ„É¨„Ç≥„Éº„ÉâÊï∞„Åß„Åô„ÄÇ',
        ngWord: {
            add: (ng: boolean, ex: boolean): string => `ËøΩÂä†„Åó„Åæ„Åó„Åü„ÄÇ(NG: ${ng}, Exclude: ${ex})`,
            remove: (ng: boolean, ex: boolean): string => `ÂâäÈô§„Åó„Åæ„Åó„Åü„ÄÇ(NG: ${ng}, Exclude: ${ex})`,
        },
    },
    pizza: {
        text: [
            {
                name: '„Éâ„Éü„Éé„Éª„Éî„Ç∂',
                url: 'https://www.dominos.jp/',
            },
            {
                name: '„Éî„Ç∂„Éº„É©',
                url: 'https://www.pizza-la.co.jp/',
            },
            {
                name: '„Éî„Ç∂„Éè„ÉÉ„Éà',
                url: 'https://pizzahut.jp/',
            },
            {
                name: '„Éä„Éù„É™„ÅÆÁ™Ø',
                url: 'https://www.napolipizza.jp/',
            },
        ],
        toText(): string {
            let pizzaText = '';
            this.text.forEach((shop) => (pizzaText += `?[${shop.name}](${shop.url})`));
            return pizzaText;
        },
    },
    food: {
        good: goodText,
        bad: badText,
        learn: (food: string, good: string): string => `${food} „ÅØ${good}\n„Åä„Åº„Åà„Åü`,
        search: (food: string, good: boolean): string => `${food} „ÅØ${good ? goodText : badText}`,
        hungry: (food: string, good: boolean): string => `${food} „Å®„Åã„Å©„ÅÜÔºü\n${good ? goodText : badText}„Çà`,
        say: (food: string, good: boolean): string => `${food}${good ? goodText : badText}`,
        canEat: '„Åù„ÇåÈ£ü„Åπ„Çâ„Çå„ÇãÔºü',
        idk: '„Çè„Åã„Çâ„Å™„ÅÑ',
        ngWord: '„Åù„ÇåÈ£ü„Åπ„Çâ„Çå„Å™„ÅÑ',
        long: 'Èï∑„ÅÑ„ÇÇ„ÅÆ',
        sushi: (num: number): string => {
            const text = [`„Å´„Åé„Çä„Åæ„Åó„ÅüÔºÅ`, `„Å´„Åé„Å£„Åü„ÇàÔºÅ`];
            return `${arrToStr(text)} ${'üç£'.repeat(num)}`;
        },
        food: (food: string): string => {
            const text = [`„Åì„Çå„ÅÇ„Åí„ÇãÔºÅ`, `È£ü„Åπ„Å¶ÔºÅ`];
            return `${arrToStr(text)} ${food}`;
        },
    },
};
